// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimOpsService.Repository;

#nullable disable

namespace SimOpsService.Migrations
{
    [DbContext(typeof(SimOpsContext))]
    [Migration("20220614235100_AirportsAndAircrafts")]
    partial class AirportsAndAircrafts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SimOps.Models.Authentication.RefreshToken", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Username");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("SimOps.Models.Authentication.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SimOps.Models.Fleet.Aircraft", b =>
                {
                    b.Property<string>("Airline")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Registration")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<long>("AuxFuelCapacity")
                        .HasColumnType("bigint");

                    b.Property<int>("AverageTAS")
                        .HasColumnType("int");

                    b.Property<int>("Ceiling")
                        .HasColumnType("int");

                    b.Property<long>("EmptyOperating")
                        .HasColumnType("bigint");

                    b.Property<string>("EngineCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EquipmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Hub")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("IataType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("IcaoType")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("LandingCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<long>("MaxLanding")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxPassengers")
                        .HasColumnType("bigint");

                    b.Property<long>("MaxRamp")
                        .HasColumnType("bigint");

                    b.Property<long>("MaxTakeoff")
                        .HasColumnType("bigint");

                    b.Property<long>("MaxZeroFuel")
                        .HasColumnType("bigint");

                    b.Property<long>("TankCapacity")
                        .HasColumnType("bigint");

                    b.HasKey("Airline", "Registration");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("SimOps.Models.Navigation.Airport", b =>
                {
                    b.Property<string>("Icao")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("Elevation")
                        .HasColumnType("int");

                    b.Property<string>("Iata")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Icao");

                    b.HasIndex("Iata");

                    b.ToTable("Airports");
                });
#pragma warning restore 612, 618
        }
    }
}
